<?xml version="1.0" encoding="UTF-8"?>
<!-- 작성자: 조윤상 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sys.stm.domains.messenger.dao.ChatMessageRepository">

    <select id="findMessagesByChatRoomId" resultType="com.sys.stm.domains.messenger.dto.response.MessageQueryResultDto">
        SELECT
            m."id", m."chat_room_id", m."sender_id", m."type", m."content",
            m."file_url", m."file_name", m."file_size", m."created_at", m."updated_at",
            (
                (SELECT COUNT(*) FROM "chat_room_participants" crp WHERE crp."chat_room_id" = m."chat_room_id") -
                (SELECT COUNT(*) FROM "message_status" ms WHERE ms."message_id" = m."id")
            ) AS readCount
        FROM "message" m
        WHERE m."chat_room_id" = #{chatRoomId}
        ORDER BY m."created_at" DESC
        OFFSET #{page} * #{size} ROWS
        FETCH NEXT #{size} ROWS ONLY
    </select>

    <insert id="createMessage" parameterType="com.sys.stm.domains.messenger.domain.Message">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            SELECT "SEQ_MESSAGE"."NEXTVAL" FROM DUAL
        </selectKey>
        INSERT INTO "message"(
            "id", "sender_id", "chat_room_id", "type", "content", 
            "file_url", "file_name", "file_size", 
            "created_at", "updated_at"
        )
        VALUES(
            #{id, jdbcType=NUMERIC}, #{senderId, jdbcType=NUMERIC}, #{chatRoomId, jdbcType=NUMERIC},
            #{type, jdbcType=VARCHAR}, #{content, jdbcType=CLOB},
            #{fileUrl, jdbcType=VARCHAR}, #{fileName, jdbcType=VARCHAR}, #{fileSize, jdbcType=NUMERIC},
            #{createdAt, jdbcType=TIMESTAMP}, #{updatedAt, jdbcType=TIMESTAMP}
        )
    </insert>

    <select id="findMessagesByChatRoomIdAndCreatedAt" resultType="java.lang.Long">
        SELECT
        m."id"
        FROM "message" m
        WHERE m."chat_room_id" = #{chatRoomId} AND m."created_at" <![CDATA[<]]> #{time}
    </select>

    <select id="findAllMessageIdsByChatRoomId" resultType="java.lang.Long">
        SELECT "id" FROM "message" WHERE "chat_room_id" = #{chatRoomId}
    </select>

    <select id="findCreatedAtByMessageId" resultType="java.sql.Timestamp">
        SELECT "created_at" FROM "message" WHERE "id" = #{messageId}
    </select>

    <select id="findAllMessageIdsByChatRoomIdAndMessageId">
        SELECT "id"
        FROM "message"
        WHERE "chat_room_id" = #{chatRoomId} AND
        "created_at" <![CDATA[<]]> (SELECT "created_at" FROM "message" WHERE "id" = #{messageId})
    </select>


    <select id="findMessageById" resultType="com.sys.stm.domains.messenger.dto.response.MessageQueryResultDto">
        SELECT
        m."id", m."chat_room_id", m."sender_id", m."type", m."content",
        m."file_url", m."file_name", m."file_size", m."created_at", m."updated_at",
        (
        (SELECT COUNT(*) FROM "chat_room_participants" crp WHERE crp."chat_room_id" = m."chat_room_id") -
        (SELECT COUNT(*) FROM "message_status" ms WHERE ms."message_id" = m."id")
        ) AS readCount
        FROM "message" m
        WHERE m."id" = #{messageId}
        ORDER BY m."created_at" DESC
    </select>

    <update id="softDeleteMessage">
        UPDATE "message"
        SET
        "content" = '삭제된 메시지입니다.',
        "type" = 'DELETED',
        "file_url" = NULL,
        "file_name" = NULL,
        "file_size" = 0
        WHERE "id" = #{messageId}
    </update>

    <!-- 1. ID로 단일 메시지 조회 (발신자 이름 포함) -->
    <select id="findMessageWithSenderNameById" resultType="com.sys.stm.domains.messenger.dto.response.MessageQueryResultDto">
        SELECT
            m."id",
            m."sender_id" AS "senderId",
            m."chat_room_id" AS "chatRoomId",
            m."type",
            m."content",
            m."file_url" AS "fileUrl",
            m."created_at" AS "createdAt",
            mem."name" AS "senderName",
            (
                (SELECT COUNT(*) FROM "chat_room_participants" crp WHERE crp."chat_room_id" = m."chat_room_id") -
                (SELECT COUNT(*) FROM "message_status" ms WHERE ms."message_id" = m."id")
            ) AS "readCount"
        FROM
            "message" m
        LEFT JOIN
            "member" mem ON m."sender_id" = mem."id"
        WHERE
            m."id" = #{id}
    </select>

    <!-- 2. 채팅방 메시지 목록 조회 (발신자 이름 포함) -->
    <select id="findMessagesWithSenderNameByChatRoomId" resultType="com.sys.stm.domains.messenger.dto.response.MessageQueryResultDto">
        SELECT
            m."id",
            m."sender_id" AS "senderId",
            m."chat_room_id" AS "chatRoomId",
            m."type",
            m."content",
            m."file_url" AS "fileUrl",
            m."created_at" AS "createdAt",
            mem."name" AS "senderName",
            (
                (SELECT COUNT(*) FROM "chat_room_participants" crp WHERE crp."chat_room_id" = m."chat_room_id") -
                (SELECT COUNT(*) FROM "message_status" ms WHERE ms."message_id" = m."id")
            ) AS "readCount"
        FROM
            "message" m
        LEFT JOIN
            "member" mem ON m."sender_id" = mem."id"
        WHERE
            m."chat_room_id" = #{chatRoomId}
        ORDER BY
            m."created_at" DESC
        OFFSET #{page} * #{size} ROWS
        FETCH NEXT #{size} ROWS ONLY
    </select>
</mapper>