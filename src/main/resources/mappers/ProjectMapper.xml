<?xml version="1.0" encoding="UTF-8"?>
<!-- 작성자: 백승준 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sys.stm.domains.project.dao.ProjectRepository">
    <resultMap id="projectResultMap" type="com.sys.stm.domains.project.domain.Project">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="desc" column="desc"/>
        <result property="status" column="status"/>
        <result property="priority" column="priority"/>
        <result property="startDate" column="start_date"/>
        <result property="endDate" column="end_date"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="isDeleted" column="is_deleted"/>
    </resultMap>

    <select id="findById" parameterType="long" resultMap="projectResultMap">
        SELECT
            p."id",
            p."name",
            p."desc",
            p."status",
            p."priority",
            p."start_date",
            p."end_date",
            p."created_at",
            p."updated_at",
            p."is_deleted"
        FROM "project" p
        WHERE p."id" = #{projectId} AND p."is_deleted" = 0
    </select>

    <select id="findAllByMemberId" resultMap="projectResultMap">
        SELECT DISTINCT
            p."id",
            p."name",
            p."desc",
            p."status",
            p."priority",
            p."start_date",
            p."end_date"
        FROM "project" p
                 LEFT JOIN "assigned_person" ap ON ap."project_id" = p."id" AND ap."is_deleted" = 0
        WHERE
            p."is_deleted" = 0
          AND (
            EXISTS (
                SELECT 1 FROM "member" m
                WHERE m."id" = #{memberId} AND m."role" = 'MASTER'
            )
                OR
            ap."member_id" = #{memberId}
            )

        <!-- 필터링 조건 추가 -->
        <if test="dto != null and dto.priority != null">
            AND p."priority" = #{dto.priority}
        </if>
        <if test="dto != null and dto.status != null">
            AND p."status" = #{dto.status}
        </if>
        <if test="dto != null and dto.search != null and dto.search != ''">
            AND (
            LOWER(p."name") LIKE '%' || LOWER(#{dto.search}) || '%' OR
            LOWER(p."desc") LIKE '%' || LOWER(#{dto.search}) || '%'
            )
        </if>
        ORDER BY
        <choose>
            <when test="dto != null and dto.sortBy != null and dto.sortBy.name() == 'NAME'">
                p."name"
            </when>
            <when test="dto != null and dto.sortBy != null and dto.sortBy.name() == 'END_DATE'">
                p."end_date"
            </when>
            <when test="dto != null and dto.sortBy != null and dto.sortBy.name() == 'PRIORITY'">
                CASE p."priority"
                WHEN 'HIGH' THEN 1
                WHEN 'NORMAL' THEN 2
                WHEN 'LOW' THEN 3
                ELSE 4
                END
            </when>
            <otherwise>
                p."id" DESC
            </otherwise>
        </choose>
    </select>

    <select id="findAllByOnlyMemberId" parameterType="long" resultMap="projectResultMap">
        SELECT
            p."id",
            p."name",
            p."desc",
            p."status",
            p."priority",
            p."start_date",
            p."end_date"
        FROM "project" p JOIN "assigned_person" ap
        ON ap."project_id" = p."id"
        WHERE ap."member_id" = #{memberId}  AND p."is_deleted" = 0 AND ap."is_deleted" = 0
    </select>




    <!-- 프로젝트 생성 -->
    <insert id="createProject" parameterType="com.sys.stm.domains.project.domain.Project">
        <selectKey keyProperty="id" resultType="long" order="AFTER">
            SELECT SEQ_PROJECT.CURRVAL FROM dual
        </selectKey>
        INSERT INTO "project"(
        "name", "desc", "status",
        "priority", "start_date", "end_date",
        "created_at", "updated_at", "is_deleted"
        )
        VALUES (
        #{name}, #{desc}, #{status},
        #{priority} , #{startDate}, #{endDate},
        #{createdAt}, #{updatedAt}, #{isDeleted}
        )
    </insert>

    <!-- 프로젝트 변경 -->
    <update id="updateProject" parameterType="com.sys.stm.domains.project.domain.Project">
        UPDATE "project"
        SET
            "name" = #{name},
            "desc" = #{desc},
            "status" = #{status},
            "priority" = #{priority},
            "start_date" = #{startDate},
            "end_date" = #{endDate},
            "updated_at" = #{updatedAt}
            WHERE "id" = #{id}
    </update>

    <!-- 프로젝트 삭제 -->
    <update id="deleteById" parameterType="long">
        UPDATE "project"
        SET
            "is_deleted" = 1,
            "updated_at" = SYSTIMESTAMP
        WHERE "id" = #{id}
    </update>

    <select id="findProjectStatsByIds" resultType="com.sys.stm.domains.project.dto.response.ProjectStatsResponseDTO">
        SELECT
        p."id" AS id,
        COUNT(DISTINCT ap."member_id") AS totalMemberCount,
        COUNT(DISTINCT i."id") AS totalTasks,
        COUNT(DISTINCT CASE WHEN i."status" = 'DONE' THEN i."id" END) AS completedTasks,
        CASE
        WHEN COUNT(DISTINCT i."id") = 0 THEN 0
        ELSE (COUNT(DISTINCT CASE WHEN i."status" = 'DONE' THEN i."id" END) * 100.0
        / COUNT(DISTINCT i."id"))
        END AS progressRate
        FROM
        "project" p
        LEFT JOIN "assigned_person" ap
        ON p."id" = ap."project_id" AND ap."is_deleted" = 0
        LEFT JOIN "issue" i
        ON p."id" = i."project_id" AND i."is_deleted" = 0
        WHERE
        p."id" IN
        <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
            #{projectId}
        </foreach>
        GROUP BY
        p."id"
    </select>


    <select id="findAllProject" resultMap="projectResultMap">
    SELECT DISTINCT
    p."id",
    p."name",
    p."desc",
    p."status",
    p."priority",
    p."start_date",
    p."end_date"
    FROM "project" p
    WHERE "is_deleted" = 0
    </select>

</mapper>